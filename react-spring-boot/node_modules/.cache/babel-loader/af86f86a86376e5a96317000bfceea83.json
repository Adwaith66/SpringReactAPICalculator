{"ast":null,"code":"var _jsxFileName = \"/Users/adwaithsreekumar/Desktop/CalculatorAPIReact/react-spring-boot/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport CalculatorService from \"./services/CalculatorService\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [result, setResult] = useState([]);\n  const [formValues, setFormValues] = useState([{\n    name: \"\",\n    email: \"\"\n  }]);\n\n  let handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n\n  useEffect(() => {\n    CalculatorService.getAll().then(response => {\n      console.log(response.data);\n      setResult(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainHeading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Calculator API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [formValues.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Equation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: element.name || \"\",\n          onChange: e => handleChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), index ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button remove\"\n          /*onClick={() => removeFormFields(index)}>Remove</button*/\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button add\",\n          type: \"button\"\n          /*onClick={() => addFormFields()}>Add</button*/\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button submit\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"s0hxl1EgU1fIi3vn6jdo4J42WVg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adwaithsreekumar/Desktop/CalculatorAPIReact/react-spring-boot/src/App.js"],"names":["useEffect","useState","CalculatorService","App","result","setResult","formValues","setFormValues","name","email","handleChange","i","e","newFormValues","target","value","getAll","then","response","console","log","data","map","element","index"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAC;AAAEO,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAG;AAApB,GAAD,CAAD,CAA5C;;AAEA,MAAIC,YAAY,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3B,QAAIC,aAAa,GAAG,CAAC,GAAGP,UAAJ,CAApB;AACAO,IAAAA,aAAa,CAACF,CAAD,CAAb,CAAiBC,CAAC,CAACE,MAAF,CAASN,IAA1B,IAAkCI,CAAC,CAACE,MAAF,CAASC,KAA3C;AACAR,IAAAA,aAAa,CAACM,aAAD,CAAb;AACD,GAJD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,iBAAiB,CAACc,MAAlB,GAA2BC,IAA3B,CAAgCC,QAAQ,IAAG;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAhB,MAAAA,SAAS,CAACa,QAAQ,CAACG,IAAV,CAAT;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAUA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACA;AAAA,kBAEIjB;AAFJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAJF,eAYA;AAAA,iBACCE,UAAU,CAACgB,GAAX,CAAe,CAACC,OAAD,EAAUC,KAAV,kBACd;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,KAAK,EAAED,OAAO,CAACf,IAAR,IAAgB,EAAtD;AAA0D,UAAA,QAAQ,EAAEI,CAAC,IAAIF,YAAY,CAACc,KAAD,EAAQZ,CAAR;AAArF;AAAA;AAAA;AAAA;AAAA,gBAFF,EAIIY,KAAK,gBACH;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAuB,UAAA,SAAS,EAAC;AAAgB;;AAAjD;AAAA;AAAA;AAAA;AAAA,gBADG,GAEH,IANN;AAAA,SAAkCA,KAAlC;AAAA;AAAA;AAAA;AAAA,cADD,CADD,eAYA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,IAAI,EAAC;AAAS;;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CArDD;;GAAMrB,G;;KAAAA,G;AAsDN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport CalculatorService from \"./services/CalculatorService\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"./App.css\"\n\nconst App = () => {\n  const [result, setResult] = useState([])\n  const [formValues, setFormValues] = useState([{ name: \"\", email : \"\"}])\n\n  let handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  }\n\n  useEffect(() => {\n    CalculatorService.getAll().then(response =>{\n      console.log(response.data)\n      setResult(response.data)\n    }) \n  }, [])\n\n  \n\n  \n  return (\n    <div>\n      <div className = \"mainHeading\">\n      <h1>Calculator API</h1>\n      </div>\n      <div className=\"answer\">\n      <h3>\n        {\n          result\n        }\n      </h3>\n      </div>\n   \n    <form  /*onSubmit={}*/>\n    {formValues.map((element, index) => (\n      <div className=\"form-inline\" key={index}>\n        <label>Equation</label>\n        <input type=\"text\" name=\"name\" value={element.name || \"\"} onChange={e => handleChange(index, e)} />\n        {\n          index ? \n            <button type=\"button\"  className=\"button remove\" /*onClick={() => removeFormFields(index)}>Remove</button*//> \n          : null\n        }\n      </div>\n    ))}\n    <div className=\"button-section\">\n        <button className=\"button add\" type=\"button\" /*onClick={() => addFormFields()}>Add</button*//>\n        <button className=\"button submit\" type=\"submit\">Submit</button>\n    </div>\n</form>\n</div>\n  );\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}