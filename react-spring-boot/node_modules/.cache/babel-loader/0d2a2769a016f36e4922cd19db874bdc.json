{"ast":null,"code":"var _jsxFileName = \"/Users/adwaithsreekumar/Desktop/CalculatorAPIReact/react-spring-boot/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [formValues, setFormValues] = useState([{\n    name: \"\",\n    email: \"\"\n  }]);\n\n  let handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n\n  let addFormFields = () => {\n    setFormValues([...formValues, {\n      name: \"\",\n      email: \"\"\n    }]);\n  };\n\n  let removeFormFields = i => {\n    let newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n\n  let handleSubmit = event => {\n    event.preventDefault();\n    alert(JSON.stringify(formValues));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [formValues.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inline\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: element.name || \"\",\n        onChange: e => handleChange(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: element.email || \"\",\n        onChange: e => handleChange(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this), index ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"button remove\",\n        onClick: () => removeFormFields(index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this) : null]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button add\",\n        type: \"button\",\n        onClick: () => addFormFields(),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button submit\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"5K260C4pF2V8TUjqJvT0id/QpkI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adwaithsreekumar/Desktop/CalculatorAPIReact/react-spring-boot/src/App.js"],"names":["React","useState","App","formValues","setFormValues","name","email","handleChange","i","e","newFormValues","target","value","addFormFields","removeFormFields","splice","handleSubmit","event","preventDefault","alert","JSON","stringify","map","element","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './styles.css'\n\nconst App = () => {\n\n    const [formValues, setFormValues] = useState([{ name: \"\", email : \"\"}])\n\n    let handleChange = (i, e) => {\n        let newFormValues = [...formValues];\n        newFormValues[i][e.target.name] = e.target.value;\n        setFormValues(newFormValues);\n      }\n    \n    let addFormFields = () => {\n        setFormValues([...formValues, { name: \"\", email: \"\" }])\n      }\n    \n    let removeFormFields = (i) => {\n        let newFormValues = [...formValues];\n        newFormValues.splice(i, 1);\n        setFormValues(newFormValues)\n    }\n    \n    let handleSubmit = (event) => {\n        event.preventDefault();\n        alert(JSON.stringify(formValues));\n    }\n\n    return (\n        <form  onSubmit={handleSubmit}>\n          {formValues.map((element, index) => (\n            <div className=\"form-inline\" key={index}>\n              <label>Name</label>\n              <input type=\"text\" name=\"name\" value={element.name || \"\"} onChange={e => handleChange(index, e)} />\n              <label>Email</label>\n              <input type=\"text\" name=\"email\" value={element.email || \"\"} onChange={e => handleChange(index, e)} />\n              {\n                index ? \n                  <button type=\"button\"  className=\"button remove\" onClick={() => removeFormFields(index)}>Remove</button> \n                : null\n              }\n            </div>\n          ))}\n          <div className=\"button-section\">\n              <button className=\"button add\" type=\"button\" onClick={() => addFormFields()}>Add</button>\n              <button className=\"button submit\" type=\"submit\">Submit</button>\n          </div>\n      </form>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}